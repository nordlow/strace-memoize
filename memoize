#!/usr/bin/env python3

import sys
import os
import subprocess
import os.path
import re
import hashlib
import tempfile
import pickle                   # cPickle not available in Python3

import json

from pprint import pprint as pp
from getopt import getopt

from dbgio import dln

# if set use modification time instead of content-hash as indentity
OPT_USE_MODTIME = False

SYS_CALLS = ["open", "openat", "stat", "stat64", "statfs", "access"]
SYS_CALLS_AT = ["openat"]       # Linux

# content hashing algorithm
HASH_NAME = 'sha1'

RELEVANT_DIRS = ['.']


def memoizedRun(args, trace_childs=True):

    with tempfile.NamedTemporaryFile() as outfile:
        strace_flags = []

        if trace_childs:
            strace_flags.append('-f')

        outfile_flags = ['-o', outfile.name]

        sys_calls_flags = ['-e', 'trace=' + ','.join(SYS_CALLS + SYS_CALLS_AT)]

        strace_args = ['strace'] + strace_flags + outfile_flags + sys_calls_flags + args

        print("strace_args:", strace_args)

        ret = subprocess.run(args=strace_args, shell=False)

        print("outfile.name:", outfile.name)

        return ret


if __name__ == '__main__':

    (opts, args) = getopt(sys.argv[1:], 'td:')

    for (opt, value) in opts:
        if opt == '-t':
            OPT_USE_MODTIME = True
        elif opt == '-d':
            RELEVANT_DIRS.append(value)

    completedProcess = memoizedRun(args)
    sys.exit(completedProcess.returncode)
